image:
  file: .gitpod.Dockerfile

tasks:
  - name: Auto Bootstrap Demo
    init: |
      echo "üöÄ Starting Docker containers..."
      docker-compose up -d

      echo "‚è≥ Waiting for PostgreSQL to be ready..."
      for i in {1..15}; do
        if psql -h localhost -p 5432 -U pguser -d pgdb -c '\q' 2>/dev/null; then
          echo "‚úÖ PostgreSQL is ready!"
          break
        else
          echo "Attempt $i: PostgreSQL not ready yet"
          sleep 3
        fi
      done

      echo "‚è≥ Waiting for RisingWave to be ready..."
      for i in {1..15}; do
        if psql -h localhost -p 4566 -U root -d dev -c '\q' 2>/dev/null; then
          echo "‚úÖ RisingWave is ready!"
          break
        else
          echo "Attempt $i: RisingWave not ready yet"
          sleep 3
        fi
      done

      echo "üêç Installing Python + psycopg2..."
      sudo apt-get update
      sudo apt-get install -y python3-pip
      pip3 install psycopg2-binary

      RAW_URL=$(grep url .git/config | cut -d'=' -f2 | tr -d ' ')
      if [[ "$RAW_URL" == *"market_data_enrichment" ]]; then
        DEMO_PATH="02-simple-demos/capital_markets/market_data_enrichment"
      elif [[ "$RAW_URL" == *"market_surveillance" ]]; then
        DEMO_PATH="02-simple-demos/capital_markets/market_surveillance"
      elif [[ "$RAW_URL" == *"market_anomaly_detection" ]]; then
        DEMO_PATH="02-simple-demos/capital_markets/market_anomaly_detection"
      else
        DEMO_PATH=""
      fi



      echo "üìÅ Auto-detected DEMO_PATH: ${DEMO_PATH}"

      if [ -n "$DEMO_PATH" ]; then
        if [ -f "${DEMO_PATH}/pg_bootstrap.sql" ]; then
          echo "üì¶ Loading Postgres bootstrap..."
          PGPASSWORD=pgpass psql -h localhost -p 5432 -U pguser -d pgdb < ${DEMO_PATH}/pg_bootstrap.sql
        fi
        if [ -f "${DEMO_PATH}/bootstrap.sql" ]; then
          echo "üì¶ Loading RisingWave bootstrap..."
          psql -h localhost -p 4566 -U root -d dev < ${DEMO_PATH}/bootstrap.sql
        fi
        if [ -f "${DEMO_PATH}/data_generator.py" ]; then
          echo "‚öôÔ∏è Running data generator..."
          python3 ${DEMO_PATH}/data_generator.py
        fi
      else
        echo "‚ö†Ô∏è Could not detect a valid demo folder."
      fi

ports:
  - port: 8088
    onOpen: open-preview
  - port: 4566
    onOpen: ignore
  - port: 5432
    onOpen: ignore
  - port: 9092
    onOpen: ignore
  - port: 2181
    onOpen: ignore

vscode:
  extensions:
    - ms-azuretools.vscode-docker
